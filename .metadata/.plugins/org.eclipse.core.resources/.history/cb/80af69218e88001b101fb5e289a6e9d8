package com.everytime.project.web;

import java.util.List;

import org.springframework.security.core.Authentication;
import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;

import com.everytime.project.config.auth.PrincipalDetails;
import com.everytime.project.domain.board.Board;
import com.everytime.project.service.BoardService;

import lombok.RequiredArgsConstructor;

@RequiredArgsConstructor
@Controller
public class BoardController {
	
	private final BoardService boardService;
	
	@GetMapping({"","/","/board"})
	public String findAll() {
		return "board/boardMain";
	}
	
	@GetMapping("/board/free")
	public String freeFindAll(Model model) {
		List<Board> boards = boardService.자유게시판목록();
		model.addAttribute("boards",boards);
		
		return "board/free/freeMain";
	}
	
	
	@GetMapping("/board/freeDetail/{id}")
	public String freeDetailFind(@PathVariable int id) {
		
		return "board/free/freeDetail";
	}
	
	@PostMapping("/board/post")
	public String save(PostSaveReqDto postSaveReqDto, @AuthenticationPrincipal PrincipalDetails principalDetails) {
		Post post = postSaveReqDto.toEntity();
		post.setUser(principalDetails.getUser());
		Post postEntity = postService.글쓰기(post);
		
		if(postEntity == null) {
			return "post/saveForm";
		}else {
			return "redirect:/";
		}
		
	}

	
}
	

